<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--
		Activates various annotations to be detected in bean classes:
		Spring's @Required and @Autowired, as well as JSR 250's @Resource.
	-->
    <context:annotation-config/>
    <aop:aspectj-autoproxy/>

    <bean id="allProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="searchSystemEnvironment" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:configuration.properties</value>
                <value>classpath:${kp.app.env}/environment.properties</value>
                <value>file:${user.home}/.m2/environment-${kp.app.env}.properties</value>
            </list>
        </property>
    </bean>

    <bean id="appProperties"
          class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="singleton" value="true"/>

        <property name="properties">
            <props>
                <prop key="activemq.home">#{activemqHome.getURL().getFile()}</prop>
                <prop key="activemq.base">#{activemqBase.getURL().getFile()}</prop>
                <prop key="web.resources">#{webResources.getURL().getFile()}</prop>
                <prop key="jetty.resources">#{jettyResources.getURL().getFile()}</prop>
                <prop key="log.dir">#{logDir.getURL().getFile()}</prop>
                <prop key="activemq.persist">#{activemqPersist.getURL().getFile()}</prop>
                <prop key="config.path">#{configPath.getURL().getFile()}</prop>
            </props>
        </property>
    </bean>

    <bean id="activemqHome" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg index="0" value="${activemq.home.rel}"/>
    </bean>

    <bean id="activemqBase" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg index="0" value="${activemq.base.rel}"/>
    </bean>

    <bean id="webResources" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg index="0" value="${web.resources.rel}"/>
    </bean>

    <bean id="jettyResources" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg index="0" value="${jetty.resources.rel}"/>
    </bean>

    <bean id="logDir" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg index="0" value="${log.dir.rel}"/>
    </bean>

    <bean id="activemqPersist" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg index="0" value="${activemq.persist.rel}"/>
    </bean>

    <bean id="configPath" class="org.springframework.core.io.FileSystemResource">
        <constructor-arg index="0" value="${config.path.rel}"/>
    </bean>


    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:/kp/app/freemarker/messages</value>
                <value>classpath:/kp/app/resources/users/messages</value>
                <value>classpath:/kp/app/security/messages</value>
                <value>classpath:/kp/app/startup/messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

</beans>