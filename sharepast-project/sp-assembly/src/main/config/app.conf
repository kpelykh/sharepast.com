#********************************************************************
# Wrapper Properties for Bz platform startup
#********************************************************************
set.default.APP_ENV=de
set.default.APP_FLAVOR=platform
set.default.APP_SHARE=/app/shared
set.default.APP_VERSION_DIR=../..
set.default.APP_LOG_DIR=../../logs
set.default.APP_POOL=app
set.default.APP_SERVER_ID=0001
set.default.APP_MEMORY=2g

# Java Application
wrapper.java.command=java

# Wait a bit longer than default before assuming jvm hasn't started properly
wrapper.startup.timeout=60

#wrapper.debug=true

#This should be set to the base of your system
#wrapper.working.dir=../..

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=Main
#wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=%APP_VERSION_DIR%/classes
wrapper.java.classpath.2=%APP_VERSION_DIR%/lib/*.jar
wrapper.java.classpath.3=%APP_SHARE%/code/bin/jsw/wrapper.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%APP_SHARE%/code/bin/jsw

# Java Additional Parameters
# environment
wrapper.java.additional.1=-Dcom.sharepast.env=%APP_ENV%
# JMX
wrapper.java.additional.2=-Dcom.sun.management.jmxremote.ssl=false
wrapper.java.additional.3=-Dcom.sun.management.jmxremote
wrapper.java.additional.4=-Dcom.sun.management.jmxremote.authenticate=false
wrapper.java.additional.5=-Dcom.sun.management.jmxremote.ssl=false
wrapper.java.additional.6=-Dcom.sun.management.jmxremote.local.only=false
wrapper.java.additional.7=-Djava.awt.headless=true
wrapper.java.additional.8=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true
wrapper.java.additional.9=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean.testing=false
# platform properties
wrapper.java.additional.10=-Dapp.rootdir=%APP_VERSION_DIR%
wrapper.java.additional.11=-Dbasedir=%APP_VERSION_DIR%
wrapper.java.additional.12=-Djava.io.tmpdir=%APP_VERSION_DIR%/tmp
wrapper.java.additional.13=-Dlog.dir=%APP_LOG_DIR%
wrapper.java.additional.14=-Dapp.config.dir=%APP_VERSION_DIR%/config
wrapper.java.additional.15=-Dweb.root.dir=%APP_VERSION_DIR%/webapp
wrapper.java.additional.16=-Dfilemgmt.temp.file.storage.firectory=%APP_SHARE%/uploads
wrapper.java.additional.17=-Dapp.server.pool=%APP_POOL%
wrapper.java.additional.18=-Dapp.server.id=%APP_SERVER_ID%
wrapper.java.additional.19=-Dsun.net.inetaddr.ttl=3600
wrapper.java.additional.20=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true
wrapper.java.additional.21=-Dfile.encoding=UTF-8
wrapper.java.additional.22=-d64
wrapper.java.additional.23=-Xms%APP_MEMORY%
wrapper.java.additional.24=-Xmx%APP_MEMORY%
wrapper.java.additional.25=-XX:MaxPermSize=256m
#----- start in debug mode on port 8888 -------------
wrapper.java.additional.26=-XX:+HeapDumpOnOutOfMemoryError
#wrapper.java.additional.27=-Xdebug
#wrapper.java.additional.28=-Xnoagent
#wrapper.java.additional.29=-Djava.compiler=NONE
#wrapper.java.additional.30=-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8888

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=com.sharepast.Bootstrapper
wrapper.app.parameter.2=1
wrapper.app.parameter.3=--%APP_FLAVOR%
wrapper.app.parameter.4=com.sharepast.Bootstrapper
wrapper.app.parameter.5=true
wrapper.app.parameter.6=1
wrapper.app.parameter.7=--stop

# wrapper control port
wrapper.port.min=32000
wrapper.port.max=32099

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=%APP_LOG_DIR%/jsw-%APP_POOL%-%APP_SERVER_ID%.txt

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=20m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=2

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=app-container

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=app-container

# Display name of the service
wrapper.ntservice.displayname=app-container

# Description of the service
wrapper.ntservice.description=Sonatype Nexus Repository Manager

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false
