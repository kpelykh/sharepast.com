<?xml version="1.0" encoding="UTF-8"?><!--
    This file contains freemarker configuration
  -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                      http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">


    <!-- Constants -->
    <!-- available as config.constant in templates -->
    <bean id="freemarkerConfigConstants" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="debug">
                    <value type="java.lang.Boolean">${web.debug}</value>
                </entry>
                <entry key="isProduction">
                    <value type="java.lang.Boolean">${is.production.env}</value>
                </entry>
                <entry key="isDevelopment">
                    <value type="java.lang.Boolean">${is.development.env}</value>
                </entry>
                <!--<entry key="hostName">
                    <value type="java.lang.String">${com.sharepast.host.name}</value>
                </entry>-->
            </map>
        </constructor-arg>
    </bean>


    <!-- Methods -->
    <!-- available as methods.methodName in templates -->
    <bean id="freemarkerMethods" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="nlsFor">
                  <bean class="com.sharepast.freemarker.NlsMethod" />
                </entry>
                <entry key="getUser">
                  <bean class="com.sharepast.freemarker.GetUserMethod"/>
                </entry>
                <entry key="url">
                    <bean class="com.sharepast.freemarker.UrlMethod"/>
                </entry>

                <!--<entry key="toJson">
                    <bean class="com.bizzy.freemarker.ToJsonMethod"/>
                </entry>
                <entry key="fromJson">
                    <bean class="com.bizzy.freemarker.FromJsonMethod"/>
                </entry>-->
            </map>
        </constructor-arg>
    </bean>

    <!-- Directives -->
    <!-- available as macros.macroName in templates -->
    <bean id="freemarkerDirectives" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <!--<entry key="unpack">
                    <bean class="com.bizzy.freemarker.UnpackDirective"/>
                </entry>-->
            </map>
        </constructor-arg>
    </bean>

    <bean id="freemarkerBeansWrapper" class="freemarker.ext.beans.BeansWrapper" factory-method="getDefaultInstance"/>

    <!-- Enums -->
    <!-- available as enums.EnumType in templates -->
    <bean id="freemarkerEnumModels" factory-bean="freemarkerBeansWrapper" factory-method="getEnumModels"/>
    <bean id="freemarkerParamNameEnum" factory-bean="freemarkerEnumModels" factory-method="get">
        <constructor-arg>
        <value type="java.lang.String">com.sharepast.constants.ParamNameEnum</value>
        </constructor-arg>
    </bean>
    <bean id="freemarkerEnums" class="java.util.HashMap">
    <constructor-arg>
      <map>
        <entry key="ParamNameEnum" value-ref="freemarkerParamNameEnum"/>
      </map>
    </constructor-arg>
  </bean>

    <!-- Resource names -->
    <!-- available as resources.resourceName in templates -->
    <bean id="freemarkerResources" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="userProfile" value="userProfileResource"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="freemarkerStaticModels" factory-bean="freemarkerBeansWrapper" factory-method="getStaticModels"/>

    <bean id="freemarkerBuild" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="version">
                    <bean factory-method="getVersion" class="com.sharepast.util.Build"/>
                </entry>
                <entry key="timestamp">
                    <bean factory-method="getTimestamp" class="com.sharepast.util.Build"/>
                </entry>
                <entry key="buildId">
                    <bean factory-method="getUniqueBuildId" class="com.sharepast.util.Build"/>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean id="freemarkerConfig" class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
        <property name="templateLoaderPaths" value="file://#{appProperties['web.resources']}/templates"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="config" value-ref="freemarkerConfigConstants"/>
                <entry key="methods" value-ref="freemarkerMethods"/>
                <entry key="macros" value-ref="freemarkerDirectives"/>
                <entry key="statics" value-ref="freemarkerStaticModels"/>
                <entry key="resources" value-ref="freemarkerResources"/>
                <entry key="enums" value-ref="freemarkerEnums"/>
                <entry key="build" value-ref="freemarkerBuild"/>
            </map>
        </property>
        <property name="freemarkerSettings">
            <props>
                <prop key="auto_import">layouts/layout.ftl as layout,libs/util.ftl as util</prop>
                <prop key="output_encoding">UTF-8</prop>
            </props>
        </property>
    </bean>


</beans>